diff --git a/cps/cover.py b/cps/cover.py
index 5dd29534..787cf21c 100644
--- a/cps/cover.py
+++ b/cps/cover.py
@@ -35,7 +35,6 @@ def cover_processing(tmp_file_name, img, extension):
         if use_IM:
             with Image(blob=img) as imgc:
                 imgc.format = 'jpeg'
-                imgc.transform_colorspace('rgb')
                 imgc.save(filename=tmp_cover_name)
                 return tmp_cover_name
         else:
diff --git a/cps/helper.py b/cps/helper.py
index 0c526d01..90f02725 100644
--- a/cps/helper.py
+++ b/cps/helper.py
@@ -910,7 +910,6 @@ def save_cover(img, book_path):
             else:
                 imgc = Image(blob=io.BytesIO(img.content))
             imgc.format = 'jpeg'
-            imgc.transform_colorspace("rgb")
             img = imgc
         except (BlobError, MissingDelegateError):
             log.error("Invalid cover file content")
diff --git a/cps/server.py b/cps/server.py
index ed5913bb..16e8fb89 100644
--- a/cps/server.py
+++ b/cps/server.py
@@ -232,7 +232,7 @@ class WebServer(object):
 
         # Max Buffersize set to 200MB
         http_server = HTTPServer(MyWSGIContainer(self.app),
-                                 max_buffer_size=209700000,
+                                 max_buffer_size=2097152000,
                                  ssl_options=self.ssl_args)
         http_server.listen(self.listen_port, self.listen_address)
         self.wsgiserver = IOLoop.current()
